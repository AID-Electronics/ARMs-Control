////////////////////////////////////////////// PARTE DE MOTORES
#include <mcp_can.h>
#include <SPI.h>
#include "Schneider_LMD_P84.h"
#include <stdio.h>

#define ID_MOTOR_1 0x610
#define ID_MOTOR_2 0x611

///////////////////////////////////////////////////////////////////////////// PARTE DE LA IMU
#include <Adafruit_Sensor.h>
#include <Adafruit_BNO055.h>
#include <Wire.h>
#include <utility/imumaths.h>
                                                        // DATOS FIJOS DEL SISTEMAS DE POLEAS Y ACTUADORES
#define RESOLUCION 0.007  //GRADOS POR PASO
#define RADIO_POLEA 25 //mm
#define ALTURA_POLEAS 360 //mm
#define D_REF 333//mm
#define DIST 50
#define H 360
#define TOL 0.035 
#define MAX 647

sensors_event_t event;

  double cabeceoPosterior=0;

  double alabeoPosterior=0;

  int cont=0;
  int pasosMotor1;
  int pasosMotor2;
  int pasosMotor3;
  int pasosMotor4;
  unsigned long t=0;
  
 const double pi=3.141592;
 double deg2rad= pi/180;
///////////////////////////////////////////////////////////////////////////////////


Adafruit_BNO055 bno = Adafruit_BNO055(55);
void displayCalStatus ()
{
  /*Cogemos los cuatro velores de calibración (0...3)
   * Cualquier sensor cuyo valor sea 0 es ignorado,
   * 3 significa calibrado.
   */
   uint8_t system, gyro, accel, mag;
   system = gyro = accel = mag = 0;
   bno.getCalibration(&system, &gyro, &accel, &mag);

   Serial.print("\t");
   if(!system)
    Serial.print("! ");

   Serial.print("Sys: ");
   Serial.print(system, DEC);
   Serial.print (" G: ");
   Serial.print (gyro, DEC);
   Serial.print (" A: ");
   Serial.print (accel, DEC);
   Serial.print (" M: ");
   Serial.println(mag, DEC);
}


int calcularPasos1D(double cabeceo,double resolucion,double radioPolea,double distCentro)
{ 
  double PASOS;
  double tangente= tan(cabeceo);
  //PASOS=(((tangente*distCentro)/(2*pi*radioPolea))*(360/resolucion)) ;
  PASOS=51200*cabeceo/(2*pi);
  
  int aux=int(PASOS);
  double aux2=abs(PASOS)-abs(aux);
    
  if(abs(aux2)>0.5)
    {
      if (aux>0)
      aux++;
      else
      aux--;
    }
   
  return aux;
  
}

int calcularPasos2D(double cabeceo,double alabeo ,double resolucion,double radioPolea,double h,double posX, double posY,double Dref)
{
    double PASOS;
  double tangenteCAB= tan(cabeceo);  //ES EL ANGULO RESPECTO EL EJE X
  double tangenteAL= tan(alabeo); //ES EL ANGULO RESPECTO EL EJE Y
  double numerador= (sqrt((tangenteCAB*h-posY)*(tangenteCAB*h-posY)+(tangenteAL*h-posX)*(tangenteAL*h-posX))-Dref);
  
  PASOS=((numerador/(2*pi*radioPolea))*(360/resolucion)) ;

  
  int aux=(int)PASOS;
  double aux2=PASOS-aux;

    if(abs(aux2)>0.5)
    {
      if (aux>0)
      aux++;
      else
      aux--;
    }
    
  return aux;
   
}
void setup(){

  ////////////////////////////////////////////////////////////////////IMU
    Serial.begin(115200);

//    if(!bno.begin())
//  {
//    Serial.print("BNO055 no detectado");
//    while(1);
//  }
//
//  delay(1000);
//
//  bno.setExtCrystalUse(true);
//
// displayCalStatus();
//////////////////////////////////////////////////////////////////// CAN BUS

    while (CAN_OK != CAN.begin(CAN_1000KBPS))  {            // init can bus : baudrate = 1000k
        Serial.println("CAN BUS Shield init fail");
        Serial.println(" Init CAN BUS Shield again");
        delay(500);
    }
    Serial.println("CAN BUS Shield init ok!");
    Serial.println();

    delay(200);
  
    setupMotor(ID_MOTOR_1,100000,100000,80,512000); //(long ID_motor,uint32_t Acel,uint32_t Decel, int current ,uint32_t MaxVel )
    setupMotor(ID_MOTOR_2,100000,100000,80,512000);

    
}


void imprimirDatos(sensors_event_t event){
/*
  Serial.print ("X: ");
  Serial.print (event.orientation.x,4);
  Serial.print ("\tY: ");
  Serial.print (event.orientation.y,4);
  Serial.print ("\tZ: ");
  Serial.println (event.orientation.z,4);
*/

  Serial.print ("  ");
  Serial.print (pasosMotor1);
  Serial.print ("  ");
  Serial.print (pasosMotor2);
  Serial.print ("  ");
  Serial.print (pasosMotor3);
  Serial.print ("  ");
  Serial.print (pasosMotor4);
  Serial.println(" ");
  //delay (2);
  
}


void moverMotores() {
  
      pasosMotor2=calcularPasos2D(cabeceoPosterior,alabeoPosterior,RESOLUCION,RADIO_POLEA,H,333,0,D_REF);
      pasosMotor1=calcularPasos2D(cabeceoPosterior,alabeoPosterior,RESOLUCION,RADIO_POLEA,H,0,333,D_REF);
      pasosMotor4=calcularPasos2D(cabeceoPosterior,alabeoPosterior,RESOLUCION,RADIO_POLEA,H,-333,0,D_REF);
      pasosMotor3=calcularPasos2D(cabeceoPosterior,alabeoPosterior,RESOLUCION,RADIO_POLEA,H,0,-333,D_REF);
      imprimirDatos(event);
      //pasosMotor1=calcularPasos1D(cabeceoPosterior-cabeceoAnterior,RESOLUCION,RADIO_POLEA,H);
      //pasosMotor3=calcularPasos1D(alabeoPosterior-alabeoAnterior,RESOLUCION,RADIO_POLEA,H);

      //AQUI iría la accion de movimiento
      mover(pasosMotor1,ID_MOTOR_1);//una vuelta
      mover(pasosMotor2,ID_MOTOR_2);
  
      
 

      
  
}
double matrix[][2]={ 
 { -0.400898 , -0.5891832  } ,
{ -0.385979 , -0.6128427  } ,
{ -0.370976 , -0.6359507  } ,
{ -0.355899 , -0.6585307  } ,
{ -0.340768 , -0.6805858  } ,
{ -0.325600 , -0.7021271  } ,
{ -0.310428 , -0.7231801  } ,
{ -0.295269 , -0.7437571  } ,
{ -0.280137 , -0.7638724  } ,
{ -0.265053 , -0.7835433  } ,
{ -0.250040 , -0.8027763  } ,
{ -0.235113 , -0.8215986  } ,
{ -0.220287 , -0.8400169  } ,
{ -0.205576 , -0.8580469  } ,
{ -0.191002 , -0.8756965  } ,
{ -0.176577 , -0.8929881  } ,
{ -0.162303 , -0.9099292  } ,
{ -0.148209 , -0.9265305  } ,
{ -0.134301 , -0.942808 } ,
{ -0.120588 , -0.9587693  } ,
{ -0.107075 , -0.9744279  } ,
{ -0.093781 , -0.9897969  } ,
{ -0.080701 , -1.004886 } ,
{ -0.067855 , -1.019706 } ,
{ -0.055246 , -1.034266 } ,
{ -0.042876 , -1.048568 } ,
{ -0.030752 , -1.062626 } ,
{ -0.018878 , -1.076446 } ,
{ -0.007257 , -1.090034 } ,
{ 0.004111  , -1.103391 } ,
{ 0.015220  , -1.116528 } ,
{ 0.026062  , -1.129445 } ,
{ 0.036645  , -1.142148 } ,
{ 0.046965  , -1.154641 } ,
{ 0.057021  , -1.166925 } ,
{ 0.066813  , -1.178999 } ,
{ 0.076342  , -1.19087  } ,
{ 0.085609  , -1.202536 } ,
{ 0.094618  , -1.213996 } ,
{ 0.103366  , -1.225248 } ,
{ 0.111855  , -1.236292 } ,
{ 0.120087  , -1.247129 } ,
{ 0.128064  , -1.257756 } ,
{ 0.135792  , -1.268173 } ,
{ 0.143270  , -1.278374 } ,
{ 0.150496  , -1.288356 } ,
{ 0.157478  , -1.298121 } ,
{ 0.164213  , -1.307658 } ,
{ 0.170696  , -1.316966 } ,
{ 0.176943  , -1.326045 } ,
{ 0.182943  , -1.334885 } ,
{ 0.188704  , -1.343486 } ,
{ 0.194218  , -1.351841 } ,
{ 0.199493  , -1.359949 } ,
{ 0.204527  , -1.367804 } ,
{ 0.209319  , -1.375402 } ,
{ 0.213867  , -1.382739 } ,
{ 0.218168  , -1.38981  } ,
{ 0.222219  , -1.396614 } ,
{ 0.226026  , -1.403146 } ,
{ 0.229584  , -1.409401 } ,
{ 0.232886  , -1.415378 } ,
{ 0.235937  , -1.421071 } ,
{ 0.238730  , -1.426476 } ,
{ 0.241259  , -1.431592 } ,
{ 0.243522  , -1.436422 } ,
{ 0.245515  , -1.440962 } ,
{ 0.247238  , -1.445205 } ,
{ 0.248684  , -1.449158 } ,
{ 0.249847  , -1.452813 } ,
{ 0.250730  , -1.456172 } ,
{ 0.251322  , -1.459238 } ,
{ 0.251622  , -1.46201  } ,
{ 0.251618  , -1.464483 } ,
{ 0.251322  , -1.466668 } ,
{ 0.250720  , -1.46855  } ,
{ 0.249814  , -1.470149 } ,
{ 0.248591  , -1.47145  } ,
{ 0.247067  , -1.472465 } ,
{ 0.245222  , -1.473196 } ,
{ 0.243061  , -1.473643 } ,
{ 0.240585  , -1.473805 } ,
{ 0.237784  , -1.473678 } ,
{ 0.234667  , -1.473286 } ,
{ 0.231238  , -1.472621 } ,
{ 0.227488  , -1.471687 } ,
{ 0.223431  , -1.470477 } ,
{ 0.219064  , -1.469007 } ,
{ 0.214391  , -1.467274 } ,
{ 0.209418  , -1.465281 } ,
{ 0.204151  , -1.46303  } ,
{ 0.198596  , -1.460525 } ,
{ 0.192760  , -1.457766 } ,
{ 0.186653  , -1.454761 } ,
{ 0.180281  , -1.451521 } ,
{ 0.173660  , -1.448027 } ,
{ 0.166800  , -1.444288 } ,
{ 0.159713  , -1.44031  } ,
{ 0.152415  , -1.436092 } ,
{ 0.144918  , -1.431631 } ,
{ 0.137238  , -1.426928 } ,
{ 0.129392  , -1.421989 } ,
{ 0.121401  , -1.416814 } ,
{ 0.113279  , -1.411396 } ,
{ 0.105048  , -1.405731 } ,
{ 0.096729  , -1.399836 } ,
{ 0.088339  , -1.393687 } ,
{ 0.079902  , -1.387292 } ,
{ 0.071438  , -1.380652 } ,
{ 0.062974  , -1.373754 } ,
{ 0.054531  , -1.366603 } ,
{ 0.046134  , -1.359189 } ,
{ 0.037805  , -1.351513 } ,
{ 0.029568  , -1.343569 } ,
{ 0.021451  , -1.33535  } ,
{ 0.013477  , -1.326851 } ,
{ 0.005675  , -1.318066 } ,
{ -0.001935 , -1.308991 } ,
{ -0.009325 , -1.299618 } ,
{ -0.016473 , -1.289942 } ,
{ -0.023353 , -1.279955 } ,
{ -0.029945 , -1.26965  } ,
{ -0.036220 , -1.259021 } ,
{ -0.042157 , -1.24806  } ,
{ -0.047739 , -1.236764 } ,
{ -0.052935 , -1.225121 } ,
{ -0.057733 , -1.213124 } ,
{ -0.062108 , -1.200772 } ,
{ -0.066046 , -1.188054 } ,
{ -0.069527 , -1.174959 } ,
{ -0.072531 , -1.161494 } ,
{ -0.075046 , -1.14764  } ,
{ -0.077059 , -1.133397 } ,
{ -0.078553 , -1.118763 } ,
{ -0.079515 , -1.103727 } ,
{ -0.079943 , -1.08829  } ,
{ -0.079828 , -1.072453 } ,
{ -0.079165 , -1.0562 } ,
{ -0.077944 , -1.039536 } ,
{ -0.076161 , -1.022458 } ,
{ -0.073809 , -1.004968 } ,
{ -0.070891 , -0.9870611  } ,
{ -0.067414 , -0.9687413  } ,
{ -0.063385 , -0.9500058  } ,
{ -0.058791 , -0.9308597  } ,
{ -0.053651 , -0.9113055  } ,
{ -0.047974 , -0.8913446  } ,
{ -0.041770 , -0.8709823  } ,
{ -0.035045 , -0.8502199  } ,
{ -0.027811 , -0.8290688  } ,
{ -0.020082 , -0.8075387  } ,
{ -0.011876 , -0.7856349  } ,
{ -0.003218 , -0.7633663  } ,
{ 0.005889  , -0.7407398  } ,
{ 0.015409  , -0.7177677  } ,
{ 0.025328  , -0.6944627  } ,
{ 0.035626  , -0.6708365  } ,
{ 0.046283  , -0.6469054  } ,
{ 0.057266  , -0.6226884  } ,
{ 0.068551  , -0.598191 } ,
{ 0.080114  , -0.5734344  } ,
{ 0.091925  , -0.5484361  } ,
{ 0.103964  , -0.523208 } ,
{ 0.116191  , -0.4977685  } ,
{ 0.128584  , -0.4721471  } ,
{ 0.141119  , -0.446359 } ,
{ 0.153756  , -0.4204211  } ,
{ 0.166477  , -0.3943608  } ,
{ 0.179241  , -0.3681878  } ,
{ 0.192028  , -0.3419366  } ,
{ 0.204808  , -0.3156223  } ,
{ 0.217548  , -0.2892684  } ,
{ 0.230220  , -0.2629016  } ,
{ 0.242796  , -0.2365396  } ,
{ 0.255248  , -0.2102085  } ,
{ 0.267548  , -0.1839319  } ,
{ 0.279672  , -0.1577328  } ,
{ 0.291594  , -0.1316372  } ,
{ 0.303290  , -0.1056673  } ,
{ 0.314728  , -0.0798421  } ,
{ 0.325892  , -0.05418816 } ,
{ 0.336760  , -0.02872813 } ,
{ 0.347311  , -0.003488149  } ,
{ 0.357519  , 0.02151652  } ,
{ 0.367375  , 0.04625887  } ,
{ 0.376852  , 0.07071762  } ,
{ 0.385944  , 0.0948718 } ,
{ 0.394629  , 0.1187054 } ,
{ 0.402898  , 0.1421899 } ,
{ 0.410731  , 0.1653142 } ,
{ 0.418132  , 0.1880527 } ,
{ 0.425085  , 0.2103908 } ,
{ 0.431577  , 0.2323093 } ,
{ 0.437606  , 0.2537981 } ,
{ 0.443166  , 0.2748385 } ,
{ 0.448252  , 0.2954102 } ,
{ 0.452859  , 0.3155048 } ,
{ 0.456989  , 0.3351111 } ,
{ 0.460638  , 0.3542124 } ,
{ 0.463815  , 0.3728013 } ,
{ 0.466516  , 0.3908625 } ,
{ 0.468750  , 0.4083892 } ,
{ 0.470514  , 0.4253741 } ,
{ 0.471819  , 0.44181 } ,
{ 0.472677  , 0.4576919 } ,
{ 0.473095  , 0.4730127 } ,
{ 0.473068  , 0.4877669 } ,
{ 0.472616  , 0.5019474 } ,
{ 0.471748  , 0.5155537 } ,
{ 0.470471  , 0.5285842 } ,
{ 0.468793  , 0.5410368 } ,
{ 0.466735  , 0.5529109 } ,
{ 0.464300  , 0.5642075 } ,
{ 0.461507  , 0.574929  } ,
{ 0.458369  , 0.5850829 } ,
{ 0.454895  , 0.5946617 } ,
{ 0.451101  , 0.6036627 } ,
{ 0.446997  , 0.612103  } ,
{ 0.442593  , 0.6199866 } ,
{ 0.437907  , 0.6273167 } ,
{ 0.432955  , 0.6340979 } ,
{ 0.427745  , 0.640336  } ,
{ 0.422288  , 0.6460359 } ,
{ 0.416601  , 0.6512051 } ,
{ 0.410691  , 0.6558547 } ,
{ 0.404567  , 0.6599877 } ,
{ 0.398243  , 0.6636126 } ,
{ 0.391729  , 0.666742  } ,
{ 0.385034  , 0.669382  } ,
{ 0.378166  , 0.6715414 } ,
{ 0.371131  , 0.6732299 } ,
{ 0.363942  , 0.6744533 } ,
{ 0.356601  , 0.6752272 } ,
{ 0.349121  , 0.6755513 } ,
{ 0.341498  , 0.6754462 } ,
{ 0.333744  , 0.6749138 } ,
{ 0.325867  , 0.6739649 } ,
{ 0.317863  , 0.6726092 } ,
{ 0.309730  , 0.6708595 } ,
{ 0.301483  , 0.668721  } ,
{ 0.293126  , 0.666203  } ,
{ 0.284643  , 0.6633141 } ,
{ 0.276040  , 0.6600658 } ,
{ 0.267326  , 0.6564665 } ,
{ 0.258492  , 0.6525213 } ,
{ 0.249535  , 0.6482428 } ,
{ 0.240459  , 0.6436381 } ,
{ 0.231265  , 0.6387167 } ,
{ 0.221941  , 0.6334853 } ,
{ 0.212491  , 0.6279523 } ,
{ 0.202910  , 0.6221272 } ,
{ 0.193196  , 0.6160182 } ,
{ 0.183345  , 0.6096325 } ,
{ 0.173349  , 0.6029763 } ,
{ 0.163208  , 0.596059  } ,
{ 0.152920  , 0.5888882 } ,
{ 0.142478  , 0.5814713 } ,
{ 0.131879  , 0.5738162 } ,
{ 0.121119  , 0.5659312 } ,
{ 0.110196  , 0.5578213 } ,
{ 0.099102  , 0.5494977 } ,
{ 0.087843  , 0.5409668 } ,
{ 0.076410  , 0.5322379 } ,
{ 0.064797  , 0.5233176 } ,
{ 0.053017  , 0.5142159 } ,
{ 0.041061  , 0.5049408 } ,
{ 0.028922  , 0.4955006 } ,
{ 0.016609  , 0.4859041 } ,
{ 0.004120  , 0.4761601 } ,
{ -0.008547 , 0.466278  } ,
{ -0.021394 , 0.4562685 } ,
{ -0.034416 , 0.4461417 } ,
{ -0.047603 , 0.4359067 } ,
{ -0.060952 , 0.4255719 } ,
{ -0.074468 , 0.4151511 } ,
{ -0.088135 , 0.4046558 } ,
{ -0.101960 , 0.394098  } ,
{ -0.115934 , 0.383493  } ,
{ -0.130042 , 0.3728481 } ,
{ -0.144280 , 0.3621748 } ,
{ -0.158639 , 0.3514919 } ,
{ -0.173107 , 0.3408065 } ,
{ -0.187681 , 0.3301407 } ,
{ -0.202351 , 0.3195058 } ,
{ -0.217094 , 0.3089124 } ,
{ -0.231905 , 0.2983795 } ,
{ -0.246772 , 0.2879252 } ,
{ -0.261676 , 0.2775598 } ,
{ -0.276612 , 0.2673023 } ,
{ -0.291559 , 0.2571706 } ,
{ -0.306505 , 0.2471802 } ,
{ -0.321434 , 0.2373507 } ,
{ -0.336337 , 0.2276971 } ,
{ -0.351190 , 0.2182379 } ,
{ -0.365973 , 0.2089894 } ,
{ -0.380672 , 0.1999664 } ,
{ -0.395273 , 0.1911964 } ,
{ -0.409759 , 0.1826929 } ,
{ -0.424111 , 0.1744756 } ,
{ -0.438311 , 0.166561  } ,
{ -0.452342 , 0.1589648 } ,
{ -0.466185 , 0.1517087 } ,
{ -0.479822 , 0.144813  } ,
{ -0.493237 , 0.1382957 } ,
{ -0.506404 , 0.1321647 } ,
{ -0.519317 , 0.1264465 } ,
{ -0.531957 , 0.1211556 } ,
{ -0.544304 , 0.1163119 } ,
{ -0.556342 , 0.1119328 } ,
{ -0.568053 , 0.1080292 } ,
{ -0.579416 , 0.1046208 } ,
{ -0.590422 , 0.1017247 } ,
{ -0.601054 , 0.09934588  } ,
{ -0.611292 , 0.09750504  } ,
{ -0.621130 , 0.09622099  } ,
{ -0.630541 , 0.09549283  } ,
{ -0.639520 , 0.09535039  } ,
{ -0.648055 , 0.09579644  } ,
{ -0.656127 , 0.09683368  } ,
{ -0.663734 , 0.09848556  } ,
{ -0.670856 , 0.1007581 } ,
{ -0.677483 , 0.1036555 } ,
{ -0.683610 , 0.1071874 } ,
{ -0.689217 , 0.1113604 } ,
{ -0.694304 , 0.1161788 } ,
{ -0.698858 , 0.1216523 } ,
{ -0.702877 , 0.1277793 } ,
{ -0.706348 , 0.1345598 } ,
{ -0.709268 , 0.1419988 } ,
{ -0.711629 , 0.1500953 } ,
{ -0.713424 , 0.1588571 } ,
{ -0.714649 , 0.1682793 } ,
{ -0.715298 , 0.1783587 } ,
{ -0.715368 , 0.1890917 } ,
{ -0.714860 , 0.2004777 } ,
{ -0.713764 , 0.2125059 } ,
{ -0.712092 , 0.2251765 } ,
{ -0.709828 , 0.2384792 } ,
{ -0.706987 , 0.2524062 } ,
{ -0.703554 , 0.2669519 } ,
{ -0.699544 , 0.2821102 } ,
{ -0.694944 , 0.2978666 } ,
{ -0.689757 , 0.3142095 } ,
{ -0.683998 , 0.3311253 } ,
{ -0.677647 , 0.3486001 } ,
{ -0.670728 , 0.3666299 } ,
{ -0.663227 , 0.3851932 } ,
{ -0.655165 , 0.4042783 } ,
{ -0.646527 , 0.4238716 } ,
{ -0.637332 , 0.4439582 } ,
{ -0.627584 , 0.4645175 } ,
{ -0.617281 , 0.4855276 } ,
{ -0.606434 , 0.5069817 } ,
{ -0.595040 , 0.5288594 } ,
{ -0.583109 , 0.5511422 } ,
{ -0.570658 , 0.573813  } ,
{ -0.557677 , 0.5968432 } ,
{ -0.544170 , 0.6202172 } ,
{ -0.530157 , 0.64392 } ,
{ -0.515642 , 0.6679305 } ,
{ -0.500637 , 0.6922256 } ,
{ -0.485142 , 0.7167849 } ,
{ -0.469174 , 0.7415925 } ,
{ -0.452740 , 0.7666202 } ,
{ -0.435847 , 0.7918522 } ,
{ -0.418507 , 0.817268  } ,
{ -0.400729 , 0.8428449 } ,
{ -0.382529 , 0.8685601 } ,
{ -0.363906 , 0.8943899 } ,
{ -0.344878 , 0.9203166 } ,
{ -0.325454 , 0.9463147 } ,
{ -0.305653 , 0.9723657 } ,
{ -0.285483 , 0.9984474 } ,
{ -0.264952 , 1.024536  } ,
{ -0.244081 , 1.05061 } ,
{ -0.222889 , 1.07665 } ,
{ -0.201381 , 1.102632  } ,
{ -0.179574 , 1.128534  } ,
{ -0.157488 , 1.154335  } ,
{ -0.135145 , 1.180016  } ,
{ -0.112552 , 1.205547  } ,
{ -0.089725 , 1.230908  } ,
{ -0.066690 , 1.256078  } ,
{ -0.043471 , 1.281037  } ,
{ -0.020081 , 1.30576 } ,
{ 0.003459  , 1.330226  } ,
{ 0.027129  , 1.354408  } ,
{ 0.050899  , 1.378289  } ,
{ 0.074747  , 1.401846  } ,
{ 0.098658  , 1.42505 } ,
{ 0.122598  , 1.447886  } ,
{ 0.146541  , 1.470327  } ,
{ 0.170469  , 1.492348  } ,
{ 0.194355  , 1.513927  } ,
{ 0.218167  , 1.535046  } ,
{ 0.241879  , 1.555675  } ,
{ 0.265457  , 1.575797  } ,
{ 0.288875  , 1.595381  } ,
{ 0.312107  , 1.614411  } ,
{ 0.335122  , 1.632854  } ,
{ 0.357883  , 1.650695  } ,
{ 0.380364  , 1.667907  } ,
{ 0.402535  , 1.684461  } ,
{ 0.424364  , 1.700336  } ,
{ 0.445820  , 1.715509  } ,
{ 0.466870  , 1.729957  } ,
{ 0.487483  , 1.743654  } ,
{ 0.507625  , 1.756577  } ,
{ 0.527265  , 1.768704  } ,
{ 0.546374  , 1.780008  } ,
{ 0.564922  , 1.790466  } ,
{ 0.582877  , 1.800055  } ,
{ 0.600208  , 1.808754  } ,
{ 0.616888  , 1.816537  } ,
{ 0.632886  , 1.823384  } ,
{ 0.648175  , 1.829272  } ,
{ 0.662728  , 1.83418 } ,
{ 0.676520  , 1.838086  } ,
{ 0.689523  , 1.84097 } ,
{ 0.701719  , 1.842807  } ,
{ 0.713082  , 1.843584  } ,
{ 0.723594  , 1.843278  } ,
{ 0.733230  , 1.841875  } ,
{ 0.741978  , 1.839352  } ,
{ 0.749818  , 1.835695  } ,
{ 0.756737  , 1.830886  } ,
{ 0.762719  , 1.824916  } ,
{ 0.767766  , 1.817764  } ,
{ 0.771859  , 1.809419  } ,
{ 0.774988  , 1.799877  } ,
{ 0.777158  , 1.78912 } ,
{ 0.778356  , 1.777146  } ,
{ 0.778587  , 1.763939  } ,
{ 0.777852  , 1.749496  } ,
{ 0.776154  , 1.73381 } ,
{ 0.773506  , 1.716883  } ,
{ 0.769909  , 1.698706  } ,
{ 0.765385  , 1.679284  } ,
{ 0.759938  , 1.658607  } ,
{ 0.753587  , 1.63669 } ,
{ 0.746350  , 1.613527  } ,
{ 0.738245  , 1.589131  } ,
{ 0.729295  , 1.563495  } ,
{ 0.719528  , 1.536643  } ,
{ 0.708965  , 1.508577  } ,
{ 0.697638  , 1.479313  } ,
{ 0.685580  , 1.448859  } ,
{ 0.672822  , 1.417229  } ,
{ 0.659391  , 1.384449  } ,
{ 0.645327  , 1.350533  } ,
{ 0.630671  , 1.315498  } ,
{ 0.615463  , 1.279363  } ,
{ 0.599740  , 1.242151  } ,
{ 0.583543  , 1.203883  } ,
{ 0.566914  , 1.164593  } ,
{ 0.549902  , 1.124301  } ,
{ 0.532546  , 1.083039  } ,
{ 0.514891  , 1.04084 } ,
{ 0.496982  , 0.9977304 } ,
{ 0.478866  , 0.9537453 } ,
{ 0.460597  , 0.9089112 } ,
{ 0.442206  , 0.8632693 } ,
{ 0.423749  , 0.8168499 } ,
{ 0.405271  , 0.7696925 } ,
{ 0.386818  , 0.7218315 } ,
{ 0.368433  , 0.6733041 } ,
{ 0.350160  , 0.6241505 } ,
{ 0.332050  , 0.5744094 } ,
{ 0.314136  , 0.5241207 } ,
{ 0.296464  , 0.4733225 } ,
{ 0.279074  , 0.4220558 } ,
{ 0.262007  , 0.370362  } ,
{ 0.245301  , 0.3182809 } ,
{ 0.228990  , 0.265853  } ,
{ 0.213107  , 0.2131219 } ,
{ 0.197691  , 0.1601235 } ,
{ 0.182769  , 0.1069011 } ,
{ 0.168374  , 0.05349229  } ,
{ 0.154526  , -6.02389E-05  } ,
{ 0.141251  , -0.05371632 } ,
{ 0.128575  , -0.1074391  } ,
{ 0.116512  , -0.1611886  } ,
{ 0.105092  , -0.2149304  } ,
{ 0.094321  , -0.2686236  } ,
{ 0.084220  , -0.3222337  } ,
{ 0.074793  , -0.3757265  } ,
{ 0.066051  , -0.4290677  } ,
{ 0.057996  , -0.4822219  } ,
{ 0.050628  , -0.5351561  } ,
{ 0.043960  , -0.5878406  } ,
{ 0.037990  , -0.6402516  } ,
{ 0.032713  , -0.6923553  } ,
{ 0.028113  , -0.7441207  } ,
{ 0.024198  , -0.795525 } ,
{ 0.020947  , -0.8465414  } ,
{ 0.018351  , -0.8971483  } ,
{ 0.016393  , -0.9473227  } ,
{ 0.015060  , -0.9970444  } ,
{ 0.014332  , -1.046294 } ,
{ 0.014182  , -1.095053 } ,
{ 0.014591  , -1.143305 } ,
{ 0.015538  , -1.191036 } ,
{ 0.016991  , -1.238231 } ,
{ 0.018930  , -1.284872 } ,
{ 0.021321  , -1.330954 } ,
{ 0.024140  , -1.376471 } ,
{ 0.027349  , -1.421403 } ,
{ 0.030915  , -1.465744 } ,
{ 0.034815  , -1.509494 } ,
{ 0.039013  , -1.552639 } ,
{ 0.043467  , -1.595184 } ,
{ 0.048147  , -1.63712  } ,
{ 0.053013  , -1.678447 } ,
{ 0.058028  , -1.719163 } ,
{ 0.063172  , -1.759273 } ,
{ 0.068394  , -1.798776 } ,
{ 0.073663  , -1.837665 } ,
{ 0.078945  , -1.875951 } ,
{ 0.084203  , -1.91363  } ,
{ 0.089401  , -1.950708 } ,
{ 0.094503  , -1.987188 } ,
{ 0.099478  , -2.023075 } ,
{ 0.104292  , -2.058373 } ,
{ 0.108912  , -2.093084 } ,
{ 0.113310  , -2.127218 } ,
{ 0.117455  , -2.160776 } ,
{ 0.121317  , -2.193763 } ,
{ 0.124868  , -2.226185 } ,
{ 0.128083  , -2.258048 } ,
{ 0.130936  , -2.289355 } ,
{ 0.133402  , -2.320111 } ,
{ 0.135463  , -2.350324 } ,
{ 0.137099  , -2.379992 } ,
{ 0.138287  , -2.409117 } ,
{ 0.139011  , -2.437707 } ,
{ 0.139253  , -2.465757 } ,
{ 0.138999  , -2.49328  } ,
{ 0.138237  , -2.520271 } ,
{ 0.136961  , -2.546733 } ,
{ 0.135160  , -2.572665 } ,
{ 0.132827  , -2.598062 } ,
{ 0.129951  , -2.622928 } ,
{ 0.126538  , -2.647256 } ,
{ 0.122580  , -2.671048 } ,
{ 0.118075  , -2.694296 } ,
{ 0.113027  , -2.716995 } ,
{ 0.107443  , -2.739145 } ,
{ 0.101325  , -2.760733 } ,
{ 0.094679  , -2.781752 } ,
{ 0.087513  , -2.802196 } ,
{ 0.079834  , -2.822052 } ,
{ 0.071660  , -2.841316 } ,
{ 0.062998  , -2.859976 } ,
{ 0.053860  , -2.878013 } ,
{ 0.044266  , -2.895418 } ,
{ 0.034233  , -2.912179 } ,
{ 0.023775  , -2.928279 } ,
{ 0.012913  , -2.943707 } ,
{ 0.001662  , -2.958445 } ,
{ -0.009951 , -2.972476 } ,
{ -0.021909 , -2.985786 } ,
{ -0.034190 , -2.99835  } ,
{ -0.046771 , -3.010156 } ,
{ -0.059622 , -3.021188 } ,
{ -0.072730 , -3.031417 } ,
{ -0.086057 , -3.040832 } ,
{ -0.099586 , -3.049413 } ,
{ -0.113288 , -3.057134 } ,
{ -0.127141 , -3.06398  } ,
{ -0.141115 , -3.069929 } ,
{ -0.155182 , -3.074961 } ,
{ -0.169319 , -3.079057 } ,
{ -0.183501 , -3.082192 } ,
{ -0.197700 , -3.084348 } ,
{ -0.211886 , -3.0855 } ,
{ -0.226036 , -3.085628 } ,
{ -0.240123 , -3.084718 } ,
{ -0.254125 , -3.082754 } ,
{ -0.268015 , -3.079711 } ,
{ -0.281764 , -3.075565 } ,
{ -0.295352 , -3.070302 } ,
{ -0.308752 , -3.063899 } ,
{ -0.321942 , -3.056345 } ,
{ -0.334898 , -3.047621 } ,
{ -0.347604 , -3.037712 } ,
{ -0.360037 , -3.026606 } ,
{ -0.372171 , -3.01428  } ,
{ -0.383977 , -3.000721 } ,
{ -0.395453 , -2.985923 } ,
{ -0.406576 , -2.96987  } ,
{ -0.417319 , -2.952545 } ,
{ -0.427666 , -2.933938 } ,
{ -0.437612 , -2.914048 } ,
{ -0.447133 , -2.892864 } ,
{ -0.456217 , -2.870377 } ,
{ -0.464843 , -2.846577 } ,
{ -0.473009 , -2.821457 } ,
{ -0.480700 , -2.795016 } ,
{ -0.487901 , -2.767247 } ,
{ -0.494600 , -2.738153 } ,
{ -0.500797 , -2.707731 } ,
{ -0.506473 , -2.675978 } ,
{ -0.511626 , -2.642894 } ,
{ -0.516243 , -2.60848  } ,
{ -0.520320 , -2.572746 } ,
{ -0.523853 , -2.535689 } ,
{ -0.526836 , -2.497311 } ,
{ -0.529263 , -2.457623 } ,
{ -0.531127 , -2.416631 } ,
{ -0.532431 , -2.374341 } ,
{ -0.533166 , -2.330765 } ,
{ -0.533333 , -2.285908 } ,
{ -0.532935 , -2.23979  } ,
{ -0.531973 , -2.192412 } ,
{ -0.530442 , -2.143793 } ,
{ -0.528348 , -2.093942 } ,
{ -0.525690 , -2.04288  } ,
{ -0.522470 , -1.990618 } ,
{ -0.518686 , -1.937173 } ,
{ -0.514354 , -1.882563 } ,
{ -0.509464 , -1.826806 } ,
{ -0.504028 , -1.769921 } ,
{ -0.498050 , -1.711928 } ,
{ -0.491538 , -1.652844 } ,
{ -0.484494 , -1.592696 } ,
{ -0.476930 , -1.531502 } ,
{ -0.468849 , -1.469286 } ,
{ -0.460261 , -1.406075 } ,
{ -0.451176 , -1.341887 } ,
{ -0.441599 , -1.27675  } ,
{ -0.431544 , -1.210688 } ,
{ -0.421019 , -1.143729 } ,
{ -0.410033 , -1.075901 } ,
{ -0.398598 , -1.007231 } ,
{ -0.386729 , -0.9377468  } ,
{ -0.374438 , -0.8674772  } ,
{ -0.361735 , -0.7964522  } ,
{ -0.348632 , -0.7247031  } ,
{ -0.335145 , -0.6522588  } ,
{ -0.321293 , -0.5791488  } ,
{ -0.307085 , -0.5054089  } ,
{ -0.292539 , -0.4310712  } ,
{ -0.277666 , -0.3561692  } ,
{ -0.262490 , -0.2807377  } ,
{ -0.247025 , -0.2048075  } ,
{ -0.231293 , -0.1284181  } ,
{ -0.215306 , -0.051603 } ,
{ -0.199089 , 0.02560505  }
};   
  
  
void loop(){
      //Serial.print("Micros: ");
      //Serial.println(micros()-t);
  
  //bno.getEvent (&event);

  
Serial.println ("  ");
  
   for(int i=0;i<MAX;i++){
   
     cabeceoPosterior=matrix[i][0]*deg2rad; //No estoy demasiado seguro de que sea el eje correcto
     alabeoPosterior=matrix[i][1]*deg2rad;
 //   Serial.println ("  ");
     //Serial.print (" ");
    Serial.print((matrix[i][0]/deg2rad));
    Serial.print (" ");
    Serial.print ((matrix[i][1]/deg2rad));
  moverMotores(); 
   delay(50);
     //t=micros();
 } 
  exit(0);

}


